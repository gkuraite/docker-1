# 19. Launch a container name Abathur. It will be a Python container, 2-slim version,
# its /root folder will be bound to a HOME folder on your host, and its 3000 port
# will be bound to the 3000 port of your virtual machine.
# You will personalize this container so that you can use the Flask micro-framework
# in its latest version. You will make sure that an html page displaying "Hello World"
# with <h1> tags can be served by Flask. You will test that your container is
# properly set up by accessing, via curl or a web browser, the IP address of your
# virtual machine on the 3000 port.
# You will also list all the necessary commands in your repository.

docker run --name Abathur --volume ~/:/root --publish 3000:3000 --detach --interactive --tty python:2-slim

# -v or --volume mounts the current working directory into the container
# -p or --publish : binds like this <port of host machine>:<port of container>

docker exec Abathur pip install Flask

# exec : command runs a new command in a running container

echo 'from flask import Flask\napp = Flask(__name__)\n\n@app.route("/")\ndef hello_world():\n\treturn "<h1>Hello World</h1>"' > ~/main.py

# Creates python script in mounted folder

docker exec --env FLASK_APP=/root/main.py Abathur flask run --host=0.0.0.0 --port 3000

# --env sets environment variable
# FLASK_APP =  env variable is used to specify how to load the application
# Script : http://flask.pocoo.org/
# Check result : In browser : http://<Char IP>:3000
# or : curl $(docker-machine ip Char):3000
